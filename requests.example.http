### CSRF request
GET {{apiv1}}/auth/csrf
Accept: application/json

### send otp
// @no-cookie-jar
POST {{apiv1}}/auth/login/otp
content-type: application/json
Accept: application/json

{
  "phone": "{{phone}}"
}

### login
// @no-cookie-jar
POST {{apiv1}}/auth/login
content-type: application/json
Accept: application/json

{
  "username": "{{phone}}",
   "password": "805161"
}


### get profile data
GET {{apiv1}}/user
Accept: application/json
Authorization: Bearer {{token}}

### update profile
POST {{apiv1}}/user/
Content-Type: application/json
Accept: application/json
Authorization: Bearer {{token}}

{
  "first_name": "mehran",
  "last_name": "prs"
}

### update profile by id
PUT {{apiv1}}/users/{{user_id}}
Content-Type: application/json
Accept: application/json
Authorization: Bearer {{token}}


{
  "first_name": "mehran",
  "last_name": "prs"
}

### get user by loginId
GET {{apiv1}}/users/login-id/ali
Authorization: Bearer {{token}}
Accept: application/json

### fetch users
POST {{apiv1}}/users/fetch
Accept: application/json
Authorization: Bearer {{token}}

### Get role by code
GET {{apiv1}}/roles/code/check
Authorization: Bearer {{token}}
Accept: application/json


### query client scopes
GET {{apiv1}}/client-scopes
Accept: application/json
Authorization: Bearer {{token}}


### create client scope
POST {{apiv1}}/client-scopes
Content-Type: application/json
Accept: application/json
Authorization: Bearer {{token}}

{
"service_id":"{{service_id}}",
"code":"signature",
"gui_order": 0,
"label": "client_scopes.name.roles",
"mappers":[
{"type": "user_prop","claim_field": "usign","user_prop_name": "signature"},
{"type": "user_prop","claim_field": "usign_url","user_prop_name": "signature.url"}]
}

### update client scope
PUT {{apiv1}}/client-scopes/62934d5e28472a428398dccc
Content-Type: application/json
Accept: application/json
Authorization: Bearer {{token}}

{
"service_id":"{{service_id}}",
"code":"signature",
"gui_order": 0,
"label": "client_scopes.name.signature",
"mappers":[
{"type": "roles","claim_field": "roles","roles": ["check"]},
{"type": "roles","claim_field": "roles","roles": ["reporter"]},
{"type": "user_prop","claim_field": "signature","user_prop_name": "signature"},
{"type": "user_prop","claim_field": "signature_url","user_prop_name": "signature.url"}
]
}


### create client

POST {{apiv1}}/clients
Content-Type: application/json
Accept: application/json
Authorization: Bearer {{token}}

{
    "name": "gatechecker2",
    "owner_id": "{{user_id}}",
    "service_id":"{{service_id}}",
    "redirect_uris": [
        "http://gateway.local:3000/oauth2/redirect"
    ],
    "allowed_grants": [
        "authorization_code",
        "password",
        "client_credentials",
        "refresh_token",
        "_implicit"
    ],
    "allowed_scopes": [],
    "grants_config": {
        "authorization_code": {
            "code_expires_in": 3600000000000,
            "generate_refresh_token": true,
            "access_token_expires_in": 259200000000000,
            "refresh_token_expires_in": 1036800000000000,
            "force_pkce": false,
            "allowed_code_challenge_methods": ["plain","s256"]
        },
        "implicit": {
            "access_token_expires_in": 0
        },
        "password_credentials": {
            "generate_refresh_token": true,
            "access_token_expires_in": 259200000000000,
            "refresh_token_expires_in": 1036800000000000
        },
        "client_credentials": {
            "access_token_expires_in": 2592000000000000
        },
        "refresh_token": {
            "remove_old_access_and_refresh_tokens": true,
            "generate_new_refresh_token": true,
            "reset_refresh_token_expiry": true
        }
    }
}

### update client
PUT {{apiv1}}/clients/{{client_id}}
Content-Type: application/json
Accept: application/json
Authorization: Bearer {{token}}

{
    "name": "gate-checker",
    "owner_id": "{{user_id}}",
    "service_id":"{{service_id}}",
    "redirect_uris": [
        "http://gateway.local:3000/oauth2/redirect"
    ],
    "allowed_grants": [
        "authorization_code",
        "password",
        "client_credentials",
        "refresh_token",
        "_implicit"
    ],
    "allowed_scopes": [
        "profile","openid","email","phone","roles"
    ],
    "grants_config": {
        "authorization_code": {
            "code_expires_in": 3600000000000,
            "generate_refresh_token": true,
            "access_token_expires_in": 31104000000000000,
            "refresh_token_expires_in": 41104000000000000,
            "force_pkce": false,
            "allowed_code_challenge_methods": ["plain","S256"],
            "is_jwt_access_token": true,
            "is_jwt_refresh_token": true
        },
        "implicit": {
            "access_token_expires_in": 0,
            "is_jwt_access_token": true
        },
        "password_credentials": {
            "generate_refresh_token": true,
            "access_token_expires_in": 31104000000000000,
            "refresh_token_expires_in": 41104000000000000,
            "is_jwt_access_token": true,
            "is_jwt_refresh_token": true
        },
        "client_credentials": {
            "access_token_expires_in": 31104000000000000,
            "is_jwt_access_token": true
        },
        "refresh_token": {
            "remove_old_access_and_refresh_tokens": true,
            "generate_new_refresh_token": true,
            "reset_refresh_token_expiry": true
        }
    }
}

### query clients
GET {{apiv1}}/clients
Accept: application/json
Authorization: Bearer {{token}}


### get client by client id
GET {{apiv1}}/clients/{{client_id}}
Accept: application/json
Authorization: Bearer {{token}}


### get client Secret
POST {{apiv1}}/clients/{{client_id}}/secret
Accept: application/json
Authorization: Bearer {{token}}


### generate client token (client crednetials grant)
POST {{apiv1}}/clients/{{client_id}}/token
Accept: application/json
Authorization: Bearer {{token}}

### generate client token using client credentials grant type
POST {{host}}/oauth2/token
Accept: application/json
Authorization: Basic {{base64_client_credentials}}
Content-Type: application/x-www-form-urlencoded

grant_type=client_credentials&scope=profile,offline


### query roles
GET {{apiv1}}/roles
Accept: application/json
Authorization: Bearer {{token}}


### create role
POST {{apiv1}}/roles
Accept: application/json
Content-Type: application/json
Authorization: Bearer {{token}}

{
  "service_id": "{{service_id}}",
  "code": "check",
  "name": "check"
}

### add role to user
POST {{apiv1}}/user/{{user_id}}/roles/check

### create policy
POST {{apiv1}}/policies
Accept: application/json
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "service_id": "{{service_id}}",
  "name": "test",
  "res_type": "ProjectLocation",
  "res_id": "1",
  "scopes": [
    "read","write"
  ],
  "decision": 2
}

### delete policy
DELETE {{apiv1}}/policies/6225b57d3b72e28e457ecc9a
Accept: application/json
Authorization: Bearer {{token}}


### query services
GET {{apiv1}}/services
Authorization: Bearer {{token}}
Accept: application/json

### create service
POST {{apiv1}}/services
Authorization: Bearer {{token}}
Content-Type: application/json
Accept: application/json

{
  "owner_id": "{{user_id}}",
  "name": "lab2"
}

### create scope policy
POST {{apiv1}}/policies
Accept: application/json
Authorization: Basic {{token}}
Content-Type: application/json

{
  "service_id": "{{service_id}}",
  "res_type": "project",
  "scopes": ["write"],
  "user_scopes":["offline"],
  "decision": 2
}

### fetch policies
POST {{apiv1}}/policies/fetch
Authorization: Bearer {{token}}
Accept: application/json
Content-Type: application/json

{
  "service_id": "{{service_id}}"
}

### create resource
POST {{apiv1}}/resources
Authorization: Bearer {{token}}
Accept: application/json
Content-Type: application/json

{
  "service_id": "{{service_id}}",
  "type": "supplier",
  "res_id": "1"
}

### Query resources
POST {{apiv1}}/resources/fetch
Authorization: Bearer {{token}}
Accept: application/json
Content-Type: application/json

{
 "service_id": "{{service_id}}",
 "type": "product"
}

### Query resource types
GET {{apiv1}}/types?service_id={{service_id}}&query=prod
Authorization: Bearer {{token}}
Accept: application/json


### upload file
POST {{apiv1}}/files
Content-Type: multipart/form-data; boundary=WebAppBoundary
Authorization: Bearer {{token}}

--WebAppBoundary
Content-Disposition: form-data; name="file"; filename="hi.txt"
Content-Type: application/json

< ./testdata/upload/hi.txt
--WebAppBoundary--


### authorize

POST {{apiv1}}/gate/authorize
Accept: application/json
Content-Type: application/json
Authorization: Bearer 3nrt08h243f3kqn6nagzbn29f79sx1
#X-USER-TOKEN: {{token}}

{
 "service_id": "{{service_id}}",
 "user_id": "{{user_id}}",
 "user_scopes": ["offline"],
 "context_params": [],
 "permissions": [
    {
       "permission": "project:my_test_id",
       "scope": "write"
    }
 ]
}

### OAuth2 Authorize request
// @no-redirect
// @no-cookie-jar
GET {{host}}/oauth2/auth?response_type=code id_token&client_id={{client_id}}&redirect_uri={{redirect_uri}}&scope=profile phone roles openid&code_challenge_method=S256&code_challenge=YgZ3Q203xivdxRYFT9AcgWNgoqCH6X0jNBPivER-MfM
Cookie: auth_token={{token}};


### Authorization code grant token request
// @no-cookie-jar
POST {{host}}/oauth2/token
Authorization: Basic {{base64_client_credentials}}
Content-Type: application/x-www-form-urlencoded

grant_type=authorization_code&redirect_uri={{redirect_uri}}&code=jpzfag1lgr&code_verifier=0e4306d2c8c3f64d80955a94ead359c6f2544624ce01c90ac2

### oauth2 userinfo endpoint
// @no-cookie-jar
GET {{host}}/oauth2/userinfo
Authorization: Bearer {{token}}
Accept: application/json