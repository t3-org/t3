{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http",
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "description": "# T3 API docs",
    "version": "0.1.0"
  },
  "host": "t3.app",
  "paths": {
    "/api/v1/lab/ping": {
      "get": {
        "tags": [
          "lab"
        ],
        "summary": "Ping API server.",
        "operationId": "labPingParams",
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/labPingSuccessResponse"
          }
        }
      }
    },
    "/api/v1/lab/routes": {
      "get": {
        "tags": [
          "lab"
        ],
        "summary": "Get all routes(Debug mode).",
        "operationId": "labRoutesParams",
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/labRoutesSuccessResponse"
          }
        }
      }
    },
    "/api/v1/tickets": {
      "get": {
        "tags": [
          "tickets"
        ],
        "summary": "Query tickets.",
        "operationId": "ticketsQueryParams",
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "page": {
                  "type": "integer",
                  "format": "int64",
                  "x-go-name": "Page"
                },
                "per_page": {
                  "type": "integer",
                  "format": "int64",
                  "x-go-name": "PerPage"
                },
                "query": {
                  "description": "Query should be in k8s label-selector format. read its\ndocs on T3 dashbaord in the tickets search page.",
                  "type": "string",
                  "x-go-name": "Query"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/ticketsQuerySuccessResponse"
          }
        }
      },
      "post": {
        "tags": [
          "tickets"
        ],
        "summary": "Create a ticket.",
        "operationId": "ticketsCreateParams",
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "annotations": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-go-name": "Annotations"
                },
                "description": {
                  "type": "string",
                  "x-go-name": "Description"
                },
                "ended_at": {
                  "type": "integer",
                  "format": "int64",
                  "x-go-name": "EndedAt"
                },
                "fingerprint": {
                  "description": "In patch requests, we'll ignore the fingerprint field. in creation\nrequests it's required.",
                  "type": "string",
                  "x-go-name": "Fingerprint"
                },
                "generator_url": {
                  "type": "string",
                  "x-go-name": "GeneratorUrl"
                },
                "is_firing": {
                  "type": "boolean",
                  "x-go-name": "IsFiring"
                },
                "is_spam": {
                  "type": "boolean",
                  "x-go-name": "IsSpam"
                },
                "labels": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-go-name": "Labels"
                },
                "raw": {
                  "type": "string",
                  "x-go-name": "Raw"
                },
                "seen_at": {
                  "type": "integer",
                  "format": "int64",
                  "x-go-name": "SeenAt"
                },
                "severity": {
                  "type": "string",
                  "x-go-name": "Severity"
                },
                "source": {
                  "type": "string",
                  "x-go-name": "Source"
                },
                "started_at": {
                  "type": "integer",
                  "format": "int64",
                  "x-go-name": "StartedAt"
                },
                "sync_annotations": {
                  "type": "boolean",
                  "x-go-name": "SyncAnnotations"
                },
                "sync_labels": {
                  "type": "boolean",
                  "x-go-name": "SyncLabels"
                },
                "title": {
                  "type": "string",
                  "x-go-name": "Title"
                },
                "values": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-go-name": "Values"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/ticketsCreateSuccessResponse"
          }
        }
      }
    },
    "/api/v1/tickets/{id}": {
      "get": {
        "tags": [
          "tickets"
        ],
        "operationId": "ticketsGetParams",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "Id",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "Body",
            "in": "body",
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/ticketsGetSuccessResponse"
          }
        }
      },
      "delete": {
        "tags": [
          "tickets"
        ],
        "summary": "Delete a ticket.",
        "operationId": "ticketsDeleteParams",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "Id",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "Body",
            "in": "body",
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/ticketsDeleteSuccessResponse"
          }
        }
      },
      "patch": {
        "tags": [
          "tickets"
        ],
        "summary": "Patch a ticket.",
        "operationId": "ticketsPatchParams",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "Id",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "Body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "annotations": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-go-name": "Annotations"
                },
                "description": {
                  "type": "string",
                  "x-go-name": "Description"
                },
                "ended_at": {
                  "type": "integer",
                  "format": "int64",
                  "x-go-name": "EndedAt"
                },
                "fingerprint": {
                  "description": "In patch requests, we'll ignore the fingerprint field. in creation\nrequests it's required.",
                  "type": "string",
                  "x-go-name": "Fingerprint"
                },
                "generator_url": {
                  "type": "string",
                  "x-go-name": "GeneratorUrl"
                },
                "is_firing": {
                  "type": "boolean",
                  "x-go-name": "IsFiring"
                },
                "is_spam": {
                  "type": "boolean",
                  "x-go-name": "IsSpam"
                },
                "labels": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-go-name": "Labels"
                },
                "raw": {
                  "type": "string",
                  "x-go-name": "Raw"
                },
                "seen_at": {
                  "type": "integer",
                  "format": "int64",
                  "x-go-name": "SeenAt"
                },
                "severity": {
                  "type": "string",
                  "x-go-name": "Severity"
                },
                "source": {
                  "type": "string",
                  "x-go-name": "Source"
                },
                "started_at": {
                  "type": "integer",
                  "format": "int64",
                  "x-go-name": "StartedAt"
                },
                "sync_annotations": {
                  "type": "boolean",
                  "x-go-name": "SyncAnnotations"
                },
                "sync_labels": {
                  "type": "boolean",
                  "x-go-name": "SyncLabels"
                },
                "title": {
                  "type": "string",
                  "x-go-name": "Title"
                },
                "values": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-go-name": "Values"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/ticketsPatchSuccessResponse"
          }
        }
      }
    },
    "/api/v1/webhooks/{webhook_type}": {
      "post": {
        "description": "This Endpoint is called by sources(grafana...) as the webhook endpoint.",
        "tags": [
          "webhooks"
        ],
        "summary": "Webhook endpoint.",
        "operationId": "webhooksCallParams",
        "parameters": [
          {
            "type": "array",
            "items": {
              "$ref": "#/definitions/GrafanaAlert"
            },
            "x-go-name": "Alerts",
            "name": "alerts",
            "in": "query"
          },
          {
            "type": "string",
            "x-go-name": "Webhook_type",
            "description": "Its value could be : grafana",
            "name": "webhook_type",
            "in": "path",
            "required": true
          },
          {
            "name": "Body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "alerts": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/GrafanaAlert"
                  },
                  "x-go-name": "Alerts"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/webhooksCallSuccessResponse"
          }
        }
      }
    }
  },
  "definitions": {
    "GrafanaAlert": {
      "type": "object",
      "properties": {
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-go-name": "Annotations"
        },
        "endsAt": {
          "type": "string",
          "format": "date-time",
          "x-go-name": "EndsAt"
        },
        "fingerprint": {
          "type": "string",
          "x-go-name": "FingerPrint"
        },
        "generatorURL": {
          "type": "string",
          "x-go-name": "GeneratorURL"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-go-name": "Labels"
        },
        "startsAt": {
          "type": "string",
          "format": "date-time",
          "x-go-name": "StartsAt"
        },
        "status": {
          "type": "string",
          "x-go-name": "Status"
        },
        "values": {
          "type": "object",
          "additionalProperties": {},
          "x-go-name": "Values"
        }
      },
      "x-go-package": "t3.org/t3/internal/input"
    },
    "Route": {
      "type": "object",
      "title": "Route contains a handler and information for matching against requests.",
      "properties": {
        "method": {
          "type": "string",
          "x-go-name": "Method"
        },
        "name": {
          "type": "string",
          "x-go-name": "Name"
        },
        "path": {
          "type": "string",
          "x-go-name": "Path"
        }
      },
      "x-go-package": "github.com/labstack/echo/v4"
    },
    "StringMap": {
      "type": "object",
      "additionalProperties": {
        "type": "string"
      },
      "x-go-package": "t3.org/t3/internal/model"
    },
    "Ticket": {
      "type": "object",
      "properties": {
        "annotations": {
          "$ref": "#/definitions/StringMap"
        },
        "created_at": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "CreatedAt"
        },
        "description": {
          "type": "string",
          "x-go-name": "Description"
        },
        "ended_at": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "EndedAt"
        },
        "fingerprint": {
          "type": "string",
          "x-go-name": "Fingerprint"
        },
        "generator_url": {
          "type": "string",
          "x-go-name": "GeneratorUrl"
        },
        "id": {
          "type": "string",
          "x-go-name": "ID"
        },
        "is_firing": {
          "type": "boolean",
          "x-go-name": "IsFiring"
        },
        "is_spam": {
          "type": "boolean",
          "x-go-name": "IsSpam"
        },
        "labels": {
          "description": "Internal labels start with \"_\". API can not touch(edit,remove...) internal labels.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-go-name": "Labels"
        },
        "raw": {
          "type": "string",
          "x-go-name": "Raw"
        },
        "seen_at": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "SeenAt"
        },
        "severity": {
          "type": "string",
          "x-go-name": "Severity"
        },
        "source": {
          "type": "string",
          "x-go-name": "Source"
        },
        "started_at": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "StartedAt"
        },
        "title": {
          "type": "string",
          "x-go-name": "Title"
        },
        "updated_at": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "UpdatedAt"
        },
        "values": {
          "$ref": "#/definitions/StringMap"
        }
      },
      "x-go-package": "t3.org/t3/internal/model"
    }
  },
  "responses": {
    "labPingSuccessResponse": {
      "description": "success response",
      "schema": {
        "type": "object",
        "properties": {
          "code": {
            "description": "response code",
            "type": "string",
            "x-go-name": "Code"
          }
        }
      }
    },
    "labRoutesSuccessResponse": {
      "description": "success response",
      "schema": {
        "type": "object",
        "properties": {
          "code": {
            "description": "response code",
            "type": "string",
            "x-go-name": "Code"
          },
          "data": {
            "type": "object",
            "properties": {
              "routes": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/Route"
                },
                "x-go-name": "Routes"
              }
            },
            "x-go-name": "Data"
          }
        }
      }
    },
    "ticketsCreateSuccessResponse": {
      "description": "success response",
      "schema": {
        "type": "object",
        "properties": {
          "code": {
            "description": "response code",
            "type": "string",
            "x-go-name": "Code"
          },
          "data": {
            "$ref": "#/definitions/Ticket"
          }
        }
      }
    },
    "ticketsDeleteSuccessResponse": {
      "description": "success response",
      "schema": {
        "type": "object",
        "properties": {
          "code": {
            "description": "response code",
            "type": "string",
            "x-go-name": "Code"
          }
        }
      }
    },
    "ticketsGetSuccessResponse": {
      "description": "success response",
      "schema": {
        "type": "object",
        "properties": {
          "code": {
            "description": "response code",
            "type": "string",
            "x-go-name": "Code"
          },
          "data": {
            "$ref": "#/definitions/Ticket"
          }
        }
      }
    },
    "ticketsPatchSuccessResponse": {
      "description": "success response",
      "schema": {
        "type": "object",
        "properties": {
          "code": {
            "description": "response code",
            "type": "string",
            "x-go-name": "Code"
          },
          "data": {
            "$ref": "#/definitions/Ticket"
          }
        }
      }
    },
    "ticketsQuerySuccessResponse": {
      "description": "success response",
      "schema": {
        "type": "object",
        "properties": {
          "Data": {
            "type": "object",
            "properties": {
              "ietms": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/Ticket"
                },
                "x-go-name": "Ietms"
              },
              "page": {
                "type": "integer",
                "format": "int64",
                "x-go-name": "Page"
              },
              "page_count": {
                "type": "integer",
                "format": "int64",
                "x-go-name": "PageCount"
              },
              "per_page": {
                "type": "integer",
                "format": "int64",
                "x-go-name": "PerPage"
              },
              "total_count": {
                "type": "integer",
                "format": "int64",
                "x-go-name": "TotalCount"
              }
            }
          },
          "code": {
            "description": "response code",
            "type": "string",
            "x-go-name": "Code"
          }
        }
      }
    },
    "webhooksCallSuccessResponse": {
      "description": "success response",
      "schema": {
        "type": "object",
        "properties": {
          "code": {
            "description": "response code",
            "type": "string",
            "x-go-name": "Code"
          },
          "data": {
            "$ref": "#/definitions/Ticket"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "bearerAuth": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ]
}